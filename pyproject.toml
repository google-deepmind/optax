[build-system]
requires = ["flit_core >=3.2,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "optax"
dynamic = ["version"]
description = "A gradient processing and optimization library in JAX."
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.10"
authors = [
    {name = "Google DeepMind", email = "optax-dev@google.com"},
]
keywords = [
    "python",
    "machine learning",
    "reinforcement-learning"
]
classifiers = [
    "Environment :: Console",
    "Programming Language :: Python",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Intended Audience :: Science/Research",
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "absl-py>=0.7.1",
  "chex>=0.1.87",
  # Keep jax, jaxlib versions in sync with .github/workflows/tests.yml
  "jax>=0.4.27",
  "jaxlib>=0.4.27",
  "numpy>=1.18.0",
]

[project.urls]
homepage = "https://github.com/google-deepmind/optax"
repository = "https://github.com/google-deepmind/optax"
documentation = "https://optax.readthedocs.io/"

[project.optional-dependencies]
test = [
    "flax>=0.5.3",
    "scipy>=1.7.1",
    "scikit-learn"
]

docs = [
    "sphinx>=6.0.0",
    "sphinx-book-theme>=1.0.1",  # Older versions fail to pin pydata-sphinx-theme
    "sphinxcontrib-katex",
    "sphinx-autodoc-typehints",
    "ipython>=8.8.0",  # 8.7.0 has ipython3 lexer error
    "myst-nb>=1.0.0",
    "matplotlib>=3.5.0",
    "sphinx-gallery>=0.14.0",
    "sphinx-collections>=0.0.1",
    "flax",
    "sphinx_contributors",
]

[tool.setuptools.packages.find]
include = ["README.md", "LICENSE"]
exclude = ["*_test.py"]

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W291",  # whitespace at the end of the line
    "B023",  # pylint's cell-var-over-loop, closures capturing variables in loop
]
ignore = [
    "E731",  # lambdas are allowed
    "F401",  # allow unused imports
    "E402",  # allow modules not at top of file
    "E741",  # allow "l" as a variable name
    "E703",  # allow semicolons (for jupyter notebooks)
]

[tool.pylint.messages_control]
disable = [
    "bad-indentation",
    "unknown-option-value",
    "invalid-name",
    "missing-function-docstring",
    "missing-class-docstring",
    "missing-module-docstring",
    "no-member",
    "too-many-locals",
    "too-many-positional-arguments",
    "no-else-return",
    "line-too-long",
    "too-many-arguments",
    "no-value-for-parameter",
    "duplicate-code",
    "unused-argument",
    "too-few-public-methods",
    "wrong-import-order",
    "unused-import",
    "wrong-import-position",
    "unnecessary-lambda-assignment",
    "too-many-lines",
    "too-many-statements",
    "deprecated-class",
    "redefined-builtin",
    "used-before-assignment",
    "undefined-variable",
    "protected-access",
    "not-callable",
    "redefined-outer-name",
    "too-many-instance-attributes",
    "missing-final-newline",
    "too-many-public-methods",
    "import-error",
]
