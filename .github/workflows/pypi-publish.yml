name: pypi

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine build
    - name: Check consistency between the package version and release tag
      run: |
        pip install .
        RELEASE_VER=${GITHUB_REF#refs/*/}
        PACKAGE_VER="v`python -c 'import optax; print(optax.__version__)'`"
        if [ $RELEASE_VER != $PACKAGE_VER ]
        then
          echo "package ver. ($PACKAGE_VER) != release ver. ($RELEASE_VER)"; exit 1
        fi
    - name: Build
      run: |
        python -m build
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
